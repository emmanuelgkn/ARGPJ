from MPRengine import Board, Point
import matplotlib.pyplot as plt
import numpy as np

#trajectoire recuper√©e sur coding game
#action = [target_x,target_y,thrust]
#pos = [x,y]
action = [[10198, 7408, 0], [10293, 7438, 100], [10349, 7478, 70], [10481, 7552, 70], [10662, 7683, 100], [10859, 7853, 100], [11081, 8079, 100], [11315, 8358, 100], [11552, 8687, 100], [11784, 9061, 100], [12006, 9475, 100], [12211, 9924, 100], [12397, 10403, 100], [12560, 10910, 100], [12697, 11440, 100], [12807, 11990, 100], [12887, 12555, 100], [12938, 13134, 100], [13019, 13720, 100], [13050, 14321, 100], [13115, 14923, 100], [13210, 15526, 100], [13336, 16127, 100], [13492, 16723, 100], [13678, 17314, 100], [13895, 17897, 100], [14141, 18470, 100], [14414, 19032, 100], [14716, 19581, 100], [15044, 20114, 100], [15399, 20631, 100], [15779, 21132, 100], [16184, 21614, 100], [16613, 22075, 100], [17063, 22514, 100], [17535, 22931, 100], [18028, 23324, 100], [18540, 23693, 100], [19069, 24036, 100], [19615, 24352, 100], [20176, 24640, 100], [20751, 24900, 100], [21337, 25131, 100], [21935, 25332, 100], [22543, 25503, 100], [23159, 25643, 100], [23782, 25752, 100], [24409, 25829, 100], [25039, 25874, 100], [25670, 25887, 100], [26275, 25878, 70], [26878, 25840, 70], [27455, 25782, 70], [28009, 25704, 70], [28541, 25608, 70], [29055, 25493, 70], [29550, 25360, 70], [30030, 25208, 70], [30493, 25039, 70], [30941, 24852, 70], [31374, 24648, 70], [31792, 24427, 70], [32194, 24188, 70], [32582, 23933, 70], [32954, 23662, 70], [33310, 23375, 70], [33650, 23072, 70], [33973, 22755, 70], [34278, 22423, 70], [34565, 22078, 70], [34834, 21719, 70], [35084, 21349, 70], [35315, 20968, 70], [35525, 20577, 70], [35715, 20175, 70], [35885, 19766, 70], [36033, 19348, 70], [36160, 18923, 70], [36266, 18492, 70], [36349, 18056, 70], [36410, 17618, 70], [36448, 17176, 70], [36464, 16734, 70], [36501, 16292, 70], [36459, 15846, 70], [36480, 15399, 70], [36468, 14950, 70], [36436, 14503, 70], [36438, 14052, 70], [36458, 13601, 70], [36443, 13149, 70], [36409, 12699, 70], [36409, 12246, 70], [36427, 11794, 70], [36409, 11342, 70], [36372, 10891, 70], [36413, 10438, 70], [36389, 9985, 70], [36398, 9532, 70]]
pos = [[10198, 7408], [10198, 7408], [10293, 7438], [10431, 7504], [10598, 7607], [10804, 7770], [11034, 7991], [11276, 8267], [11520, 8593], [11759, 8965], [11987, 9377], [12199, 9825], [12391, 10304], [12560, 10811], [12703, 11341], [12818, 11891], [12904, 12457], [12960, 13037], [12985, 13627], [13015, 14228], [13075, 14832], [13166, 15437], [13287, 16040], [13439, 16639], [13621, 17233], [13834, 17819], [14076, 18395], [14346, 18960], [14644, 19512], [14969, 20049], [15321, 20570], [15698, 21075], [16100, 21561], [16526, 22026], [16974, 22470], [17444, 22891], [17935, 23289], [18445, 23662], [18973, 24010], [19518, 24331], [20078, 24624], [20652, 24889], [21238, 25125], [21836, 25331], [22444, 25507], [23060, 25652], [23683, 25766], [24311, 25848], [24942, 25898], [25575, 25916], [26209, 25902], [26813, 25866], [27391, 25810], [27946, 25735], [28480, 25641], [28995, 25529], [29492, 25398], [29973, 25249], [30438, 25082], [30888, 24898], [31323, 24696], [31743, 24477], [32148, 24241], [32538, 23988], [32913, 23719], [33272, 23434], [33615, 23133], [33941, 22817], [34249, 22487], [34539, 22143], [34811, 21786], [35065, 21417], [35299, 21037], [35513, 20646], [35706, 20245], [35879, 19836], [36031, 19418], [36162, 18993], [36271, 18562], [36358, 18126], [36422, 17687], [36464, 17245], [36483, 16802], [36480, 16359], [36481, 15913], [36462, 15467], [36449, 15018], [36457, 14570], [36460, 14119], [36440, 13669], [36424, 13217], [36430, 12766], [36431, 12313], [36409, 11862], [36391, 11410], [36394, 10958], [36392, 10505], [36409, 10053], [36419, 9600]]

board = Board(0,0)
board.pod.x = 10198
board.pod.y = 7408

traj = [board.pod.getCoord()]
for i in range(len(action)):
    x,y,thrust = action[i]
    newx,newy,_,_,_,_ = board.play(Point(x,y),thrust)
    traj.append([newx,newy])


print(len(traj))
print(len(pos))
plt.figure(figsize=(20,10))
plt.subplot(121)
plt.title("Trajectoire sur Codingame")
for i in range(len(traj[:-1])):
    plt.scatter(traj[i][0],traj[i][1],color='blue')
    # plt.scatter(pos[i][0],pos[i][1],color='red')
plt.subplot(122)
plt.title("Trajectoire en local")
for i in range(len(traj[:-1])):
    # plt.scatter(traj[i][0],traj[i][1],color='blue')
    plt.scatter(pos[i][0],pos[i][1],color='red')
plt.show()

# Calculate the average distance between points in pos and traj
def moyenne(pos, traj):
    total_distance = 0
    for p, t in zip(pos, traj):
        distance = np.sqrt((p[0] - t[0])**2 + (p[1] - t[1])**2)
        total_distance += distance
    return total_distance / len(pos)

average_distance = moyenne(pos, traj)
print(f"distance moyenne: {average_distance}")